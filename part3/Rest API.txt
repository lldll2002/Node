>> 서버에 요청을 보낼 때는 주소를 통해 요청의 내용을 표현
- /index.html 이면 index.html을 보내달라는 뜻
- 항상 html을 요구할 필요는 없음
- 서버가 이해하기 쉬운 주소가 좋음

>> REST API(Represeintational State Transfer)
- 서버의 자원을 정의하고 자원에 대한 주소를 지정하는 방법
- /user이면 사용자 정보에 관한 정보를 요청하는 것
- /port면 게시글에 관련된 자원을 요청하는 것

>> HTTP 요청 메서드

- GET : 서버 자원(정보)을 가져오려고 할 때 사용
  // 단순 조회용

- POST : 서버에 자원을 새로 등록하고자 할 때 사용(또는 뭘 써야할 지 애매할 때)
  // 엽서라는 뜻, 엽서 보내듯이 안에 내용을 작성해서 보내줘야 함
  // 내용 쓰지 않아도 되긴 하는데 내용이 없음

- PUT : 서버의 자원을 요청에 들어있는 자원으로 치환하고자 할 때 사용
  // 단순히 수정 하고자 할 때 사용
  // 어떠한 것에 대한 수정을 할 지 '값'에 대한 것도 들어가야함

- PATCH : 서버 자원의 일부만 수정하고자 할 때 사용
  // PUT과 비슷한데 대부분 PUT 으로 사용.
  
- DELETE : 서버의 자원을 삭제하고자 할 때 사용


>> 클라이언트가 누구든 서버와 HTTP 프로토콜로 소통 가능
- iOS, 안드로이드, 웹이 모두 같은 주소로 요청 보낼 수 있음
- 서버와 클라이언트의 분리
  // 서버를 늘리거나 할 때에 클라이언트를 뭘 가지고 있느냐에 구애받지 않는 장점이 있음

>> RESTful
- REST API를 사용한 주소 체계를 이용하는 서버
- GET /user는 사용자를 조회하는 요청, POST /user는 사용자를 등록하는 요청